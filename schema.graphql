type Token @entity {
    id: Bytes!
    symbol: String
    name: String!
    decimals: BigInt!
}

type TradeOffer @entity {
    id: String!
    tokenFrom: Token
    tokenTo: Token
    amountFrom: BigDecimal!
    amountFromWithFee: BigDecimal!
    amountTo: BigDecimal!
    creator: Bytes!
    taker: Bytes!
    optionalTaker: Bytes
    active: Boolean!
    completed: Boolean!
    tradeID: BigInt!
    fee: BigInt!
    blockNumber: BigInt!
    creationTimestamp: BigInt!
    cancelTimestamp: BigInt
    takenTimestamp: BigInt
    creationHash: Bytes!
    cancelHash: Bytes
    takenHash: Bytes
}

type OfferCreated @entity(immutable: true) {
    id: String!
    tradeID: BigInt!
    tradeOffer: TradeOffer!
    creator: Bytes!
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type OfferCancelled @entity(immutable: true) {
    id: String!
    tradeID: BigInt!
    tradeOffer: TradeOffer!
    creator: Bytes!
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type OfferTaken @entity(immutable: true) {
    id: String!
    tradeID: BigInt!
    tradeOffer: TradeOffer!
    taker: Bytes!
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type OfferStats @entity {
    id: Bytes!
    canceled: BigInt!
    accepted: BigInt!
    total: BigInt!
    lastUpdateTimestamp: BigInt!
}
